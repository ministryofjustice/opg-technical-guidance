name: Publish Docs

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - "docs/**"
  schedule:
    # Every Tuesday, at 9.15am
    - cron: '15 9 * * 2'

jobs:
  upload_external_artifacts:
    runs-on: ubuntu-latest
    steps:
    - name: Get artifacts directly from the API
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.ORG_ACCESS_TOKEN }}
      run: |
        repo="${{ github.repository }}"
        token="${{ env.GITHUB_TOKEN }}"
        declare -a artifacts=("repository_ownership" "repository_releases")
        mkdir -p ./artifacts/zip ./artifacts/erb
        for artifact in "${artifacts[@]}"; do
            echo "Getting all artifacts for this repo & looking for ${artifact}"
            query="[ .artifacts[] | select(.name == \"${artifact}\").archive_download_url][0]"
            # fetch the first url, trim " and add access token
            artifact_url=$(curl --silent -H "Authorization: token ${token}" \
                            https://api.github.com/repos/${repo}/actions/artifacts \
                            | jq -c "${query}" \
                            | tr -d \" )
            len=${#artifact_url}
            # download the zip, extract it and move
            if [[ "${len}" -gt "5" ]]; then
                echo "Artifact url: ${artifact_url}"
                artifact_url="$(echo ${artifact_url} | sed s#api.#${token}@api.#g)"
                echo "Downloading to local zip"
                curl --silent -L "${artifact_url}" -o "./artifacts/zip/${artifact}.zip"
                unzip -o "./artifacts/zip/${artifact}.zip" -d "./artifacts/erb/"
            else
                echo "No artifact found for ${artifact}"
            fi
        done
    - name: Upload all artifacts
      uses: actions/upload-artifact@v2
      with:
        name: reports
        path: artifacts/erb/*.erb

  build_and_publish:
    needs: upload_external_artifacts
    runs-on: ubuntu-latest
    container:
      image: ministryofjustice/tech-docs-github-pages-publisher:1.3
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Download reports from artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts
    - name: List and move artifacts if they exist
      run: |
        ls -lart
        if [ -d artifacts ]; then
          ls -lart artifacts*
          find ./artifacts -type f -name "*.erb" -exec mv {} ./source/documentation \;
        fi
    - name: Build
      run: bundle exec middleman build --build-dir docs --relative-links 2>/dev/null
    - run: touch docs/.nojekyll
    - run: cd docs && echo 'docs.opg.service.justice.gov.uk' >CNAME
    - run: git config --global user.email "tools@digital.justice.gov.uk"
    - run: git config --global user.name "Github Action"
    - run: git checkout -b gh-pages
    - run: git add docs
    - run: git commit -m "Published at $(date)"
    - run: git push origin gh-pages --force
