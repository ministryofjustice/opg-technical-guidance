on:
  workflow_call:
    inputs:
      pr_title:
        description: 'Pull Request title.'
        required: false
        type: string
        default: 'Update structurizr documentation'
      pr_body:
        description: 'Pull Request body content.'
        required: false
        type: string
        default: 'Please check the mermaid files are correctly rendered'
      pr_name:
        description: 'Pull Request name to raise changes from.'
        required: false
        type: string
        default: generate-structurizr-documentation
      branch_name:
        description: 'Branch name to use for committing changes too.'
        required: false
        type: string
        default: generate-structurizr-documentation
      commit_message:
        description: 'Branch name to use for committing changes too.'
        required: false
        type: string
        default: 'Generate structurizr documents'
      documents_directory:
        description: 'Directory that holds the files to be generated.'
        required: false
        type: string
        default: dsl/poas/
      make_command:
        description: 'Make command that runs the structurizr export.'
        required: false
        type: string
        default: run-structurizr-export

jobs:
  structurizr:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Run structurizr export
        run: make ${{ inputs.make_command }}
      - name: Create branch
        run: |
          git status -s >> $GITHUB_STEP_SUMMARY
          git config --global user.email "tools@digital.justice.gov.uk"
          git config --global user.name "Github Action"
          git add ${{ inputs.documents_directory }}
          git checkout ${{ inputs.branch_name }} 2>/dev/null || git checkout -b ${{ inputs.branch_name }}
          git commit -m '${{ inputs.commit_message }}' || exit 0
          git push origin ${{ inputs.branch_name }} -f
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create pull request
        run: |
          gh pr edit ${{ inputs.pr_name }} -b '${{ inputs.pr_body }}' -t '${{ inputs.pr_title }}' && gh pr reopen ${{ inputs.pr_name }} || gh pr create -b '${{ inputs.pr_body }}' -t '${{ inputs.pr_title }}' -B main -H ${{ inputs.pr_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
