---
title: API Standards (evolving)
last_reviewed_on: 2023-06-16
review_in: 6 months
owner_slack: '#opg-developers'
---

# <%= current_page.data.title %>

<%= warning_text('These standards are evolving and may all change at any point') %>

Baseline API Standards for OPG teams to use when building new APIs.

Adopt these standards if there is no reason not to, but you may break any of them if you have a compelling need.

## Infrastructure

## Design

1. **Use JSON** for request and response bodies
1. **Use lowerCamelCase** for keys
1. **Prefer flat structure**, we don't have a standard response format and should keep things as minimal as possible (e.g. don't use something like JSON:API, or have all responses like `{"data": ...}`)
1. **Use [RFC3339](https://www.rfc-editor.org/rfc/rfc3339)** to format dates

    Examples of RFC3339 formatted dates:
     - 2023-06-16
     - 2023-06-16T09:04:38Z
     - 09:04:46Z

## Versioning

1. **Avoid versioning until there is a definite requirement**
1. Use SemVer to provide meaning and context to version changes
1. Encode version in the header via Content Negotiation (`Accept` header) e.g. `Accept: application/vnd.opg-data.v1+json`
1. Prefer additive changes over destructive ones
1. Provide concrete deadlines and documentation to consumers
1. Ensure APIs and network traffic is well-monitored

For further information, see the [OPG Data versioning strategy](https://github.com/ministryofjustice/opg-data/blob/main/docs/architecture/supporting-notes/versioning-strategy.md)

## Documentation

1. Use the [OpenAPI Specification](https://swagger.io/specification/) for documenting APIs
1. Store in the repo at `/docs/openapi/openapi.yml`

## Authentication

1. **Use JSON Web Tokens** (JWTs) to authenticate requests between OPG services
    1. JWTs should be asymmetrically signed
    1. Each JWT must contain the following claims:
        1. **sub:** Either an identifier of the user making the request (e.g. email address) or a service identifier if not user is involved
        1. **iat:** The timestamp of when the token was issued
        1. **exp:** The timestamp of when the token will expire
        1. **iss:** The service that issued the token
    1. APIs must validate "exp", "iat" and "iss" claims, and the "nbf" claim if provided
1. Where APIs only have consumers inside OPG, use infrastructure tools (e.g. AWS IAM) to restrict access to those services

## Useful links

- [API Working Group](../cops/api.html)
